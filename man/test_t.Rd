% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_t.R
\name{test_t}
\alias{test_t}
\title{One-sample Student's t-test}
\usage{
test_t(
  x,
  h0 = 0,
  alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95
)
}
\arguments{
\item{x}{a non-empty numeric vector of data values.}

\item{h0}{a number indicating the true value of the mean (null hypothesis).}

\item{alternative}{a character string specifying the alternative hypothesis; must be one of "two.sided" (default), "greater", or "less".}

\item{conf.level}{confidence level of the interval}
}
\value{
A summary of the t-test and a list with class "ttest" containing the following components:
\itemize{
\item statistic - statistic the value of the t-statistic
\item parameter - the degrees of freedom for the t-statistic
\item p.value - the p-value for the t-test
\item conf.int - a confidence interval for the mean appropriate to the specified alternative hypothesis
\item estimate - the estimated mean of the sample
\item null.value - the specified hypothesized value of the mean (null hypothesis)
\item stderr - the standard error of the mean, used as a denominator in the t-statistic formula
\item alternative - a character string describing the alternative hypothesis
\item method - a character string indicating what type of t-test was performed
\item data.name - a character string giving the name of the data
}
}
\description{
Performs one sample t-tests on vectors of data.
}
\examples{
## Examples for a two-sided t-test
## That is, true mean is equal to the null hypothesis (h0)
test_t(1:10)           # P = 0.0002782
## Changing the null hypothesis to 5
test_t(1:10, h0 = 5)   # P = 0.6141, not significant

## Examples for a one-sided t-test
## First case, true mean is less than the null hypothesis
test_t(1:10, alternative = "less")    # P = 0.9999
## Second case, true mean is greater than the null hypothesis
test_t(1:10, alternative = "greater")  # P = 0.0001391

## Example of different confidence levels
test_t(1:10, h0 = 5, conf.level = 0.9)
test_t(1:10, h0 = 5, conf.level = 0.99)
}
